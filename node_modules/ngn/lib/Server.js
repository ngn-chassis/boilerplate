/**
  * v0.3.31 generated on: Thu May 18 2017 01:24:44 GMT+0000 (UTC)
  * Copyright (c) 2014-2017, Ecor Ventures LLC. All Rights Reserved. See LICENSE (BSD3).
  */
'use strict'

class Server extends NGN.EventEmitter {
  constructor (config) {
    config = config || {}

    super(config)

    Object.defineProperties(this, {
      _running: NGN.private(false),

      _starting: NGN.private(false)
    })

    this._port = config.port || null
    this._port = this._port !== null ? parseInt(this._port, 10) : null

    this.autostart = NGN.coalesce(config.autoStart, true)

    const me = this
    this.on('start', function () {
      me.emit('ready')
    })

    setTimeout(function () {
      me.autostart && me.start()
    }, 10)
  }

  get running () {
    return this._running
  }

  get starting () {
    return this._starting
  }

  get port () {
    return parseInt(this._port, 10)
  }

  start () {
    if (!this.running) {
      this._running = true
      this._starting = false
      this.emit && this.emit('start')
    }
  }

  stop () {
    if (this.running) {
      this._running = false
      this._starting = false
      this.emit && this.emit('stop', this)
    }
  }
}

module.exports = Server
